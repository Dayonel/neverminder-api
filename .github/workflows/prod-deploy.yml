name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Replace secrets
        run: |
          sed -i 's/db-name/${{ secrets.DB_NAME }}/g' docker-compose.yml
          sed -i 's/db-username/${{ secrets.DB_USER }}/g' docker-compose.yml
          sed -i 's/db-password/${{ secrets.DB_PASSWORD }}/g' docker-compose.yml
          sed -i 's/db-host/${{ secrets.DB_HOST }}/g' Neverminder/appsettings.json
          sed -i 's/db-name/${{ secrets.DB_NAME }}/g' Neverminder/appsettings.json
          sed -i 's/db-username/${{ secrets.DB_USER }}/g' Neverminder/appsettings.json
          sed -i 's/db-password/${{ secrets.DB_PASSWORD }}/g' Neverminder/appsettings.json
          echo ${{ secrets.FIREBASE_CREDENTIALS }} > Neverminder/neverminder-me-firebase-adminsdk-pq10q-ab46b52acc.json

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_IMAGE_NAME }} -f Neverminder/Dockerfile .
          docker tag ${{ secrets.DOCKER_IMAGE_NAME }} ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest

      - name: Transfer files to Droplet
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          port: 22
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: "docker-compose.yml,nginx.conf"
          target: ${{ secrets.DROPPLET_FOLDER_PATH }}
          overwrite: true

      - name: SSH into DigitalOcean Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd ${{ secrets.DROPPLET_FOLDER_PATH }}
            docker login --username ${{ secrets.DOCKER_USERNAME }} --password '${{ secrets.DOCKER_PASSWORD }}'
            docker rmi $(docker images '${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}' -a -q)
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
            docker compose up -d